# routes.py
import json
import os
import subprocess
import numpy as np
from requests import request
from fastapi import APIRouter, Depends, File, Form, UploadFile
from fastapi.responses import JSONResponse
#from server.modules.layout_detection.helpers import get_layout_from_single_image

router = APIRouter(
	prefix='/layout/detect-layouts',
	tags=['Layout-Detection'],
)

@router.post("/")
async def detect_layout(file: UploadFile):
    try:
        with open(file.filename, "wb") as f:
            f.write(file.file.read())

        # Run the Docker container
        docker_command = [
            "docker", "run",
            "-v", f"{os.path.abspath('.')}/results:/app/results", 
            "-v", f"{os.path.abspath('.')}/{file.filename}:/app/{file.filename}",  
            "layout_detection_final",
            "python", "inference.py",
            file.filename  
        ]
        
        subprocess.run(docker_command, check=True)

        # Read the JSON file generated by the Docker container
        output_path = f"results/{file.filename}.json"
        with open(output_path, 'r') as json_file:
            layout = json.load(json_file)

        return JSONResponse(content={"message": "Layout Detection Successful", "layout": layout})
    except subprocess.CalledProcessError as e:
        return JSONResponse(content={"message": "Layout Detection Failed", "error": str(e)}, status_code=500)
    except Exception as e:
        return JSONResponse(content={"message": "Layout Detection Failed", "error": str(e)}, status_code=500)